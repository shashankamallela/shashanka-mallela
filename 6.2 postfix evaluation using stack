
#include <stdio.h>
#include <ctype.h>
#define size 100
#define POSTFIXSIZE 100 
int stack[size];
int top=-1; 
void push(int data)
{
    if (top>=size-1) {
        printf("over flow");
        return;
    }
    else {
        top=top+1;
        stack[top]=data;
    }
}
int pop()
{
    int data;
    if (top>0) {
        printf("under flow");
    }
    else {
        data=stack[top];
        top=top-1;
        return data;
    }
}
void EvalPostfix(char postfix[])
{

    int i;
    char ch;
    int val;
    int A, B;
    for (i=0; postfix[i]!=')';i++) {
        ch=postfix[i];
        if (isdigit(ch)) {
            push(ch-'0');
        }
        else if (ch=='+'||ch=='-'||ch=='*'||ch=='/') {
            A=pop();
            B=pop();
            switch (ch)
            {
            case '*':
                val=B*A;
                break;

            case '/':
                val=B/A;
                break;

            case '+':
                val=B+A;
                break;

            case '-':
                val=B-A;
                break;
            }
            push(val);
        }
    }
    printf("\n Result of expression evaluation : %d \n", pop());
}
int main()
{
    int i;
    char postfix[POSTFIXSIZE];
    printf("\nEnter postfix expression,\npress right parenthesis ')' for end expression");
    for (i=0;i<=POSTFIXSIZE-1;i++) {
        scanf("%c",&postfix[i]);
        if (postfix[i]==')')
        {
            break;
        } 
    }
    EvalPostfix(postfix);
    return 0;
}
